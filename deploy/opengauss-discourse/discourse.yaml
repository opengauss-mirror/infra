---
apiVersion: v1
kind: Service
metadata:
  name: web-server
  labels:
    app: web-server
  namespace: opengauss-discourse
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: web-server
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
  namespace: opengauss-discourse
spec:
  replicas: 4
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
      annotations:
        vault.hashicorp.com/agent-service-account-token-volume-name: "token-vol"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'opengauss-discourse'
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/agent-inject-perms-monitor.sh: "0500"
        vault.hashicorp.com/secret-volume-path-monitor.sh: /vault/secrets
        vault.hashicorp.com/agent-inject-secret-monitor.sh: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-monitor.sh: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.monitorScript }}
          {{- end }}
        vault.hashicorp.com/agent-inject-perms-envbash.sh: "0500"
        vault.hashicorp.com/secret-volume-path-envbash.sh: /vault/secrets
        vault.hashicorp.com/agent-inject-secret-envbash.sh: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-envbash.sh: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.envScript }}
          {{- end }}
        vault.hashicorp.com/agent-inject-perms-pg-server-ca.crt: "0400"
        vault.hashicorp.com/secret-volume-path-pg-server-ca.crt: /usr/local/share/ca-certificates
        vault.hashicorp.com/agent-inject-secret-pg-server-ca.crt: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-pg-server-ca.crt: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.pgsqlCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-perms-redis-server-ca.crt: "0400"
        vault.hashicorp.com/secret-volume-path-redis-server-ca.crt: /usr/local/share/ca-certificates
        vault.hashicorp.com/agent-inject-secret-redis-server-ca.crt: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-redis-server-ca.crt: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.redisCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-perms-discourse.key: "0400"
        vault.hashicorp.com/secret-volume-path-discourse.key: /etc/nginx/certs
        vault.hashicorp.com/agent-inject-secret-discourse.key: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-discourse.key: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.serverKey }}
          {{- end }}
        vault.hashicorp.com/agent-inject-perms-discourse.crt: "0400"
        vault.hashicorp.com/secret-volume-path-discourse.crt: /etc/nginx/certs
        vault.hashicorp.com/agent-inject-secret-discourse.crt: 'internal/data/opengauss/opengauss-discourse'
        vault.hashicorp.com/agent-inject-template-discourse.crt: |  
          {{- with secret "internal/data/opengauss/opengauss-discourse" -}}  
          {{ .Data.data.serverCrt }}
          {{- end }}
        vault.hashicorp.com/agent-inject-command-discourse.key: |
          for count in 1 2 3; do if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then echo "success delete config"; rm -rf /etc/nginx/* ; break; else echo "service not running skip";sleep 10; fi done
        vault.hashicorp.com/agent-inject-command-discourse.crt: |
          for count in 1 2 3; do if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then echo "success delete config"; rm -rf /etc/nginx/* ; break; else echo "service not running skip";sleep 10; fi done
        vault.hashicorp.com/agent-inject-command-pg-server-ca.crt: |
          for count in 1 2 3; do if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then echo "success delete config"; rm -rf /usr/local/share/ca-certificates/pg-server-ca.crt ; break; else echo "service not running skip";sleep 10; fi done
        vault.hashicorp.com/agent-inject-command-redis-server-ca.crt: |
          for count in 1 2 3; do if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then echo "success delete config"; rm -rf /usr/local/share/ca-certificates/redis-server-ca.crt ; break; else echo "service not running skip";sleep 10; fi done
        vault.hashicorp.com/template-static-secret-render-interval: 5s
    spec:
      serviceAccountName: opengauss-discourse
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      securityContext:
        seccompProfile:
          type: Localhost
          localhostProfile: infra-seccomp.json
      nodeSelector:
        kubernetes.io/arch: amd64
      automountServiceAccountToken: false
      containers:
      - name: web-server
        image: swr.cn-north-4.myhuaweicloud.com/opensourceway/common/discourse:v1.1.8
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -c
        - |
          /vault/secrets/envbash.sh
        env: 
        - name: DISCOURSE_MAXMIND_LICENSE_KEY
          value: ""
        - name: DISCOURSE_DEVELOPER_EMAILS
          value: ""
        - name: DISCOURSE_DB_NAME
          value: ""
        - name: DISCOURSE_DB_PASSWORD
          value: ""
        - name: DISCOURSE_REDIS_PASSWORD
          value: ""
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 500m
            memory: 1500Mi
          limits:
            cpu: 2
            memory: 3000Mi
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: discourse-storage-new
          mountPath: /shared
      volumes:
      - name: discourse-storage-new
        persistentVolumeClaim:
          claimName: discourse-share-volume
      - name: token-vol
        projected:
          sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 600
              path: token
